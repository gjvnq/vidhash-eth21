// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package main

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// HashDictionaryEntry is an auto generated low-level Go binding around an user-defined struct.
type HashDictionaryEntry struct {
	Hpair      HashDictionaryHashPair
	VotesRight *big.Int
	VotesWrong *big.Int
}

// HashDictionaryHashPair is an auto generated low-level Go binding around an user-defined struct.
type HashDictionaryHashPair struct {
	Phash []byte
	Chash []byte
}

// HashDictionaryABI is the input ABI used to generate the binding from.
const HashDictionaryABI = "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"alg_phash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"alg_chash\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"phash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"chash\",\"type\":\"bytes\"}],\"internalType\":\"structHashDictionary.HashPair\",\"name\":\"hpair\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"votes_right\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"votes_wrong\",\"type\":\"int256\"}],\"indexed\":false,\"internalType\":\"structHashDictionary.Entry\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"AddedEntry\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"phash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"chash\",\"type\":\"bytes\"}],\"internalType\":\"structHashDictionary.HashPair\",\"name\":\"hpair\",\"type\":\"tuple\"}],\"name\":\"addEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"chash2idx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chash_alg\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"entries_list\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"phash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"chash\",\"type\":\"bytes\"}],\"internalType\":\"structHashDictionary.HashPair\",\"name\":\"hpair\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"votes_right\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"votes_wrong\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"getEntriesByCHash\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"phash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"chash\",\"type\":\"bytes\"}],\"internalType\":\"structHashDictionary.HashPair\",\"name\":\"hpair\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"votes_right\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"votes_wrong\",\"type\":\"int256\"}],\"internalType\":\"structHashDictionary.Entry[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"getEntriesByPHash\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"phash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"chash\",\"type\":\"bytes\"}],\"internalType\":\"structHashDictionary.HashPair\",\"name\":\"hpair\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"votes_right\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"votes_wrong\",\"type\":\"int256\"}],\"internalType\":\"structHashDictionary.Entry[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"phash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"chash\",\"type\":\"bytes\"}],\"internalType\":\"structHashDictionary.HashPair\",\"name\":\"hpair\",\"type\":\"tuple\"}],\"name\":\"getEntryIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"phash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"chash\",\"type\":\"bytes\"}],\"internalType\":\"structHashDictionary.HashPair\",\"name\":\"hpair\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVoteKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"hashpair2idx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"phash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"chash\",\"type\":\"bytes\"}],\"internalType\":\"structHashDictionary.HashPair\",\"name\":\"hpair\",\"type\":\"tuple\"}],\"name\":\"hpair2bytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"phash2idx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phash_alg\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"phash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"chash\",\"type\":\"bytes\"}],\"internalType\":\"structHashDictionary.HashPair\",\"name\":\"hpair\",\"type\":\"tuple\"},{\"internalType\":\"enumHashDictionary.VoteChoice\",\"name\":\"new_vote\",\"type\":\"uint8\"}],\"name\":\"voteEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// HashDictionaryBin is the compiled bytecode used for deploying new contracts.
var HashDictionaryBin = ""

// DeployHashDictionary deploys a new Ethereum contract, binding an instance of HashDictionary to it.
func DeployHashDictionary(auth *bind.TransactOpts, backend bind.ContractBackend, alg_phash string, alg_chash string) (common.Address, *types.Transaction, *HashDictionary, error) {
	parsed, err := abi.JSON(strings.NewReader(HashDictionaryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(HashDictionaryBin), backend, alg_phash, alg_chash)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &HashDictionary{HashDictionaryCaller: HashDictionaryCaller{contract: contract}, HashDictionaryTransactor: HashDictionaryTransactor{contract: contract}, HashDictionaryFilterer: HashDictionaryFilterer{contract: contract}}, nil
}

// HashDictionary is an auto generated Go binding around an Ethereum contract.
type HashDictionary struct {
	HashDictionaryCaller     // Read-only binding to the contract
	HashDictionaryTransactor // Write-only binding to the contract
	HashDictionaryFilterer   // Log filterer for contract events
}

// HashDictionaryCaller is an auto generated read-only Go binding around an Ethereum contract.
type HashDictionaryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// HashDictionaryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type HashDictionaryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// HashDictionaryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type HashDictionaryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// HashDictionarySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type HashDictionarySession struct {
	Contract     *HashDictionary   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// HashDictionaryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type HashDictionaryCallerSession struct {
	Contract *HashDictionaryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// HashDictionaryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type HashDictionaryTransactorSession struct {
	Contract     *HashDictionaryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// HashDictionaryRaw is an auto generated low-level Go binding around an Ethereum contract.
type HashDictionaryRaw struct {
	Contract *HashDictionary // Generic contract binding to access the raw methods on
}

// HashDictionaryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type HashDictionaryCallerRaw struct {
	Contract *HashDictionaryCaller // Generic read-only contract binding to access the raw methods on
}

// HashDictionaryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type HashDictionaryTransactorRaw struct {
	Contract *HashDictionaryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewHashDictionary creates a new instance of HashDictionary, bound to a specific deployed contract.
func NewHashDictionary(address common.Address, backend bind.ContractBackend) (*HashDictionary, error) {
	contract, err := bindHashDictionary(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &HashDictionary{HashDictionaryCaller: HashDictionaryCaller{contract: contract}, HashDictionaryTransactor: HashDictionaryTransactor{contract: contract}, HashDictionaryFilterer: HashDictionaryFilterer{contract: contract}}, nil
}

// NewHashDictionaryCaller creates a new read-only instance of HashDictionary, bound to a specific deployed contract.
func NewHashDictionaryCaller(address common.Address, caller bind.ContractCaller) (*HashDictionaryCaller, error) {
	contract, err := bindHashDictionary(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &HashDictionaryCaller{contract: contract}, nil
}

// NewHashDictionaryTransactor creates a new write-only instance of HashDictionary, bound to a specific deployed contract.
func NewHashDictionaryTransactor(address common.Address, transactor bind.ContractTransactor) (*HashDictionaryTransactor, error) {
	contract, err := bindHashDictionary(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &HashDictionaryTransactor{contract: contract}, nil
}

// NewHashDictionaryFilterer creates a new log filterer instance of HashDictionary, bound to a specific deployed contract.
func NewHashDictionaryFilterer(address common.Address, filterer bind.ContractFilterer) (*HashDictionaryFilterer, error) {
	contract, err := bindHashDictionary(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &HashDictionaryFilterer{contract: contract}, nil
}

// bindHashDictionary binds a generic wrapper to an already deployed contract.
func bindHashDictionary(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(HashDictionaryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_HashDictionary *HashDictionaryRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _HashDictionary.Contract.HashDictionaryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_HashDictionary *HashDictionaryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _HashDictionary.Contract.HashDictionaryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_HashDictionary *HashDictionaryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _HashDictionary.Contract.HashDictionaryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_HashDictionary *HashDictionaryCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _HashDictionary.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_HashDictionary *HashDictionaryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _HashDictionary.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_HashDictionary *HashDictionaryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _HashDictionary.Contract.contract.Transact(opts, method, params...)
}

// Chash2idx is a free data retrieval call binding the contract method 0x89804bcb.
//
// Solidity: function chash2idx(bytes , uint256 ) view returns(uint256)
func (_HashDictionary *HashDictionaryCaller) Chash2idx(opts *bind.CallOpts, arg0 []byte, arg1 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "chash2idx", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Chash2idx is a free data retrieval call binding the contract method 0x89804bcb.
//
// Solidity: function chash2idx(bytes , uint256 ) view returns(uint256)
func (_HashDictionary *HashDictionarySession) Chash2idx(arg0 []byte, arg1 *big.Int) (*big.Int, error) {
	return _HashDictionary.Contract.Chash2idx(&_HashDictionary.CallOpts, arg0, arg1)
}

// Chash2idx is a free data retrieval call binding the contract method 0x89804bcb.
//
// Solidity: function chash2idx(bytes , uint256 ) view returns(uint256)
func (_HashDictionary *HashDictionaryCallerSession) Chash2idx(arg0 []byte, arg1 *big.Int) (*big.Int, error) {
	return _HashDictionary.Contract.Chash2idx(&_HashDictionary.CallOpts, arg0, arg1)
}

// ChashAlg is a free data retrieval call binding the contract method 0x595e79e2.
//
// Solidity: function chash_alg() view returns(string)
func (_HashDictionary *HashDictionaryCaller) ChashAlg(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "chash_alg")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// ChashAlg is a free data retrieval call binding the contract method 0x595e79e2.
//
// Solidity: function chash_alg() view returns(string)
func (_HashDictionary *HashDictionarySession) ChashAlg() (string, error) {
	return _HashDictionary.Contract.ChashAlg(&_HashDictionary.CallOpts)
}

// ChashAlg is a free data retrieval call binding the contract method 0x595e79e2.
//
// Solidity: function chash_alg() view returns(string)
func (_HashDictionary *HashDictionaryCallerSession) ChashAlg() (string, error) {
	return _HashDictionary.Contract.ChashAlg(&_HashDictionary.CallOpts)
}

// EntriesList is a free data retrieval call binding the contract method 0xd8de8a74.
//
// Solidity: function entries_list(uint256 ) view returns((bytes,bytes) hpair, int256 votes_right, int256 votes_wrong)
func (_HashDictionary *HashDictionaryCaller) EntriesList(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Hpair      HashDictionaryHashPair
	VotesRight *big.Int
	VotesWrong *big.Int
}, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "entries_list", arg0)

	outstruct := new(struct {
		Hpair      HashDictionaryHashPair
		VotesRight *big.Int
		VotesWrong *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Hpair = *abi.ConvertType(out[0], new(HashDictionaryHashPair)).(*HashDictionaryHashPair)
	outstruct.VotesRight = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.VotesWrong = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// EntriesList is a free data retrieval call binding the contract method 0xd8de8a74.
//
// Solidity: function entries_list(uint256 ) view returns((bytes,bytes) hpair, int256 votes_right, int256 votes_wrong)
func (_HashDictionary *HashDictionarySession) EntriesList(arg0 *big.Int) (struct {
	Hpair      HashDictionaryHashPair
	VotesRight *big.Int
	VotesWrong *big.Int
}, error) {
	return _HashDictionary.Contract.EntriesList(&_HashDictionary.CallOpts, arg0)
}

// EntriesList is a free data retrieval call binding the contract method 0xd8de8a74.
//
// Solidity: function entries_list(uint256 ) view returns((bytes,bytes) hpair, int256 votes_right, int256 votes_wrong)
func (_HashDictionary *HashDictionaryCallerSession) EntriesList(arg0 *big.Int) (struct {
	Hpair      HashDictionaryHashPair
	VotesRight *big.Int
	VotesWrong *big.Int
}, error) {
	return _HashDictionary.Contract.EntriesList(&_HashDictionary.CallOpts, arg0)
}

// GetEntriesByCHash is a free data retrieval call binding the contract method 0xc0946d06.
//
// Solidity: function getEntriesByCHash(bytes hash) view returns(((bytes,bytes),int256,int256)[])
func (_HashDictionary *HashDictionaryCaller) GetEntriesByCHash(opts *bind.CallOpts, hash []byte) ([]HashDictionaryEntry, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "getEntriesByCHash", hash)

	if err != nil {
		return *new([]HashDictionaryEntry), err
	}

	out0 := *abi.ConvertType(out[0], new([]HashDictionaryEntry)).(*[]HashDictionaryEntry)

	return out0, err

}

// GetEntriesByCHash is a free data retrieval call binding the contract method 0xc0946d06.
//
// Solidity: function getEntriesByCHash(bytes hash) view returns(((bytes,bytes),int256,int256)[])
func (_HashDictionary *HashDictionarySession) GetEntriesByCHash(hash []byte) ([]HashDictionaryEntry, error) {
	return _HashDictionary.Contract.GetEntriesByCHash(&_HashDictionary.CallOpts, hash)
}

// GetEntriesByCHash is a free data retrieval call binding the contract method 0xc0946d06.
//
// Solidity: function getEntriesByCHash(bytes hash) view returns(((bytes,bytes),int256,int256)[])
func (_HashDictionary *HashDictionaryCallerSession) GetEntriesByCHash(hash []byte) ([]HashDictionaryEntry, error) {
	return _HashDictionary.Contract.GetEntriesByCHash(&_HashDictionary.CallOpts, hash)
}

// GetEntriesByPHash is a free data retrieval call binding the contract method 0xb5fe73ff.
//
// Solidity: function getEntriesByPHash(bytes hash) view returns(((bytes,bytes),int256,int256)[])
func (_HashDictionary *HashDictionaryCaller) GetEntriesByPHash(opts *bind.CallOpts, hash []byte) ([]HashDictionaryEntry, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "getEntriesByPHash", hash)

	if err != nil {
		return *new([]HashDictionaryEntry), err
	}

	out0 := *abi.ConvertType(out[0], new([]HashDictionaryEntry)).(*[]HashDictionaryEntry)

	return out0, err

}

// GetEntriesByPHash is a free data retrieval call binding the contract method 0xb5fe73ff.
//
// Solidity: function getEntriesByPHash(bytes hash) view returns(((bytes,bytes),int256,int256)[])
func (_HashDictionary *HashDictionarySession) GetEntriesByPHash(hash []byte) ([]HashDictionaryEntry, error) {
	return _HashDictionary.Contract.GetEntriesByPHash(&_HashDictionary.CallOpts, hash)
}

// GetEntriesByPHash is a free data retrieval call binding the contract method 0xb5fe73ff.
//
// Solidity: function getEntriesByPHash(bytes hash) view returns(((bytes,bytes),int256,int256)[])
func (_HashDictionary *HashDictionaryCallerSession) GetEntriesByPHash(hash []byte) ([]HashDictionaryEntry, error) {
	return _HashDictionary.Contract.GetEntriesByPHash(&_HashDictionary.CallOpts, hash)
}

// GetEntryIdx is a free data retrieval call binding the contract method 0x92bff539.
//
// Solidity: function getEntryIdx((bytes,bytes) hpair) view returns(uint256)
func (_HashDictionary *HashDictionaryCaller) GetEntryIdx(opts *bind.CallOpts, hpair HashDictionaryHashPair) (*big.Int, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "getEntryIdx", hpair)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetEntryIdx is a free data retrieval call binding the contract method 0x92bff539.
//
// Solidity: function getEntryIdx((bytes,bytes) hpair) view returns(uint256)
func (_HashDictionary *HashDictionarySession) GetEntryIdx(hpair HashDictionaryHashPair) (*big.Int, error) {
	return _HashDictionary.Contract.GetEntryIdx(&_HashDictionary.CallOpts, hpair)
}

// GetEntryIdx is a free data retrieval call binding the contract method 0x92bff539.
//
// Solidity: function getEntryIdx((bytes,bytes) hpair) view returns(uint256)
func (_HashDictionary *HashDictionaryCallerSession) GetEntryIdx(hpair HashDictionaryHashPair) (*big.Int, error) {
	return _HashDictionary.Contract.GetEntryIdx(&_HashDictionary.CallOpts, hpair)
}

// GetVoteKey is a free data retrieval call binding the contract method 0xfe09b504.
//
// Solidity: function getVoteKey((bytes,bytes) hpair, address voter) pure returns(bytes)
func (_HashDictionary *HashDictionaryCaller) GetVoteKey(opts *bind.CallOpts, hpair HashDictionaryHashPair, voter common.Address) ([]byte, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "getVoteKey", hpair, voter)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// GetVoteKey is a free data retrieval call binding the contract method 0xfe09b504.
//
// Solidity: function getVoteKey((bytes,bytes) hpair, address voter) pure returns(bytes)
func (_HashDictionary *HashDictionarySession) GetVoteKey(hpair HashDictionaryHashPair, voter common.Address) ([]byte, error) {
	return _HashDictionary.Contract.GetVoteKey(&_HashDictionary.CallOpts, hpair, voter)
}

// GetVoteKey is a free data retrieval call binding the contract method 0xfe09b504.
//
// Solidity: function getVoteKey((bytes,bytes) hpair, address voter) pure returns(bytes)
func (_HashDictionary *HashDictionaryCallerSession) GetVoteKey(hpair HashDictionaryHashPair, voter common.Address) ([]byte, error) {
	return _HashDictionary.Contract.GetVoteKey(&_HashDictionary.CallOpts, hpair, voter)
}

// Hashpair2idx is a free data retrieval call binding the contract method 0x867274ff.
//
// Solidity: function hashpair2idx(bytes ) view returns(uint256)
func (_HashDictionary *HashDictionaryCaller) Hashpair2idx(opts *bind.CallOpts, arg0 []byte) (*big.Int, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "hashpair2idx", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Hashpair2idx is a free data retrieval call binding the contract method 0x867274ff.
//
// Solidity: function hashpair2idx(bytes ) view returns(uint256)
func (_HashDictionary *HashDictionarySession) Hashpair2idx(arg0 []byte) (*big.Int, error) {
	return _HashDictionary.Contract.Hashpair2idx(&_HashDictionary.CallOpts, arg0)
}

// Hashpair2idx is a free data retrieval call binding the contract method 0x867274ff.
//
// Solidity: function hashpair2idx(bytes ) view returns(uint256)
func (_HashDictionary *HashDictionaryCallerSession) Hashpair2idx(arg0 []byte) (*big.Int, error) {
	return _HashDictionary.Contract.Hashpair2idx(&_HashDictionary.CallOpts, arg0)
}

// Hpair2bytes is a free data retrieval call binding the contract method 0x3823ea5a.
//
// Solidity: function hpair2bytes((bytes,bytes) hpair) pure returns(bytes)
func (_HashDictionary *HashDictionaryCaller) Hpair2bytes(opts *bind.CallOpts, hpair HashDictionaryHashPair) ([]byte, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "hpair2bytes", hpair)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// Hpair2bytes is a free data retrieval call binding the contract method 0x3823ea5a.
//
// Solidity: function hpair2bytes((bytes,bytes) hpair) pure returns(bytes)
func (_HashDictionary *HashDictionarySession) Hpair2bytes(hpair HashDictionaryHashPair) ([]byte, error) {
	return _HashDictionary.Contract.Hpair2bytes(&_HashDictionary.CallOpts, hpair)
}

// Hpair2bytes is a free data retrieval call binding the contract method 0x3823ea5a.
//
// Solidity: function hpair2bytes((bytes,bytes) hpair) pure returns(bytes)
func (_HashDictionary *HashDictionaryCallerSession) Hpair2bytes(hpair HashDictionaryHashPair) ([]byte, error) {
	return _HashDictionary.Contract.Hpair2bytes(&_HashDictionary.CallOpts, hpair)
}

// Phash2idx is a free data retrieval call binding the contract method 0x264329cf.
//
// Solidity: function phash2idx(bytes , uint256 ) view returns(uint256)
func (_HashDictionary *HashDictionaryCaller) Phash2idx(opts *bind.CallOpts, arg0 []byte, arg1 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "phash2idx", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Phash2idx is a free data retrieval call binding the contract method 0x264329cf.
//
// Solidity: function phash2idx(bytes , uint256 ) view returns(uint256)
func (_HashDictionary *HashDictionarySession) Phash2idx(arg0 []byte, arg1 *big.Int) (*big.Int, error) {
	return _HashDictionary.Contract.Phash2idx(&_HashDictionary.CallOpts, arg0, arg1)
}

// Phash2idx is a free data retrieval call binding the contract method 0x264329cf.
//
// Solidity: function phash2idx(bytes , uint256 ) view returns(uint256)
func (_HashDictionary *HashDictionaryCallerSession) Phash2idx(arg0 []byte, arg1 *big.Int) (*big.Int, error) {
	return _HashDictionary.Contract.Phash2idx(&_HashDictionary.CallOpts, arg0, arg1)
}

// PhashAlg is a free data retrieval call binding the contract method 0xa6836c88.
//
// Solidity: function phash_alg() view returns(string)
func (_HashDictionary *HashDictionaryCaller) PhashAlg(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _HashDictionary.contract.Call(opts, &out, "phash_alg")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// PhashAlg is a free data retrieval call binding the contract method 0xa6836c88.
//
// Solidity: function phash_alg() view returns(string)
func (_HashDictionary *HashDictionarySession) PhashAlg() (string, error) {
	return _HashDictionary.Contract.PhashAlg(&_HashDictionary.CallOpts)
}

// PhashAlg is a free data retrieval call binding the contract method 0xa6836c88.
//
// Solidity: function phash_alg() view returns(string)
func (_HashDictionary *HashDictionaryCallerSession) PhashAlg() (string, error) {
	return _HashDictionary.Contract.PhashAlg(&_HashDictionary.CallOpts)
}

// AddEntry is a paid mutator transaction binding the contract method 0x54aa85fa.
//
// Solidity: function addEntry((bytes,bytes) hpair) returns()
func (_HashDictionary *HashDictionaryTransactor) AddEntry(opts *bind.TransactOpts, hpair HashDictionaryHashPair) (*types.Transaction, error) {
	return _HashDictionary.contract.Transact(opts, "addEntry", hpair)
}

// AddEntry is a paid mutator transaction binding the contract method 0x54aa85fa.
//
// Solidity: function addEntry((bytes,bytes) hpair) returns()
func (_HashDictionary *HashDictionarySession) AddEntry(hpair HashDictionaryHashPair) (*types.Transaction, error) {
	return _HashDictionary.Contract.AddEntry(&_HashDictionary.TransactOpts, hpair)
}

// AddEntry is a paid mutator transaction binding the contract method 0x54aa85fa.
//
// Solidity: function addEntry((bytes,bytes) hpair) returns()
func (_HashDictionary *HashDictionaryTransactorSession) AddEntry(hpair HashDictionaryHashPair) (*types.Transaction, error) {
	return _HashDictionary.Contract.AddEntry(&_HashDictionary.TransactOpts, hpair)
}

// VoteEntry is a paid mutator transaction binding the contract method 0x58dca471.
//
// Solidity: function voteEntry((bytes,bytes) hpair, uint8 new_vote) returns()
func (_HashDictionary *HashDictionaryTransactor) VoteEntry(opts *bind.TransactOpts, hpair HashDictionaryHashPair, new_vote uint8) (*types.Transaction, error) {
	return _HashDictionary.contract.Transact(opts, "voteEntry", hpair, new_vote)
}

// VoteEntry is a paid mutator transaction binding the contract method 0x58dca471.
//
// Solidity: function voteEntry((bytes,bytes) hpair, uint8 new_vote) returns()
func (_HashDictionary *HashDictionarySession) VoteEntry(hpair HashDictionaryHashPair, new_vote uint8) (*types.Transaction, error) {
	return _HashDictionary.Contract.VoteEntry(&_HashDictionary.TransactOpts, hpair, new_vote)
}

// VoteEntry is a paid mutator transaction binding the contract method 0x58dca471.
//
// Solidity: function voteEntry((bytes,bytes) hpair, uint8 new_vote) returns()
func (_HashDictionary *HashDictionaryTransactorSession) VoteEntry(hpair HashDictionaryHashPair, new_vote uint8) (*types.Transaction, error) {
	return _HashDictionary.Contract.VoteEntry(&_HashDictionary.TransactOpts, hpair, new_vote)
}

// HashDictionaryAddedEntryIterator is returned from FilterAddedEntry and is used to iterate over the raw logs and unpacked data for AddedEntry events raised by the HashDictionary contract.
type HashDictionaryAddedEntryIterator struct {
	Event *HashDictionaryAddedEntry // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *HashDictionaryAddedEntryIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(HashDictionaryAddedEntry)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(HashDictionaryAddedEntry)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *HashDictionaryAddedEntryIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *HashDictionaryAddedEntryIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// HashDictionaryAddedEntry represents a AddedEntry event raised by the HashDictionary contract.
type HashDictionaryAddedEntry struct {
	Arg0 HashDictionaryEntry
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterAddedEntry is a free log retrieval operation binding the contract event 0x8c0baa86d44d5f30f109c29dc75cea40e1ab88d58b5181ff13c7992f4626af1e.
//
// Solidity: event AddedEntry(((bytes,bytes),int256,int256) arg0)
func (_HashDictionary *HashDictionaryFilterer) FilterAddedEntry(opts *bind.FilterOpts) (*HashDictionaryAddedEntryIterator, error) {

	logs, sub, err := _HashDictionary.contract.FilterLogs(opts, "AddedEntry")
	if err != nil {
		return nil, err
	}
	return &HashDictionaryAddedEntryIterator{contract: _HashDictionary.contract, event: "AddedEntry", logs: logs, sub: sub}, nil
}

// WatchAddedEntry is a free log subscription operation binding the contract event 0x8c0baa86d44d5f30f109c29dc75cea40e1ab88d58b5181ff13c7992f4626af1e.
//
// Solidity: event AddedEntry(((bytes,bytes),int256,int256) arg0)
func (_HashDictionary *HashDictionaryFilterer) WatchAddedEntry(opts *bind.WatchOpts, sink chan<- *HashDictionaryAddedEntry) (event.Subscription, error) {

	logs, sub, err := _HashDictionary.contract.WatchLogs(opts, "AddedEntry")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(HashDictionaryAddedEntry)
				if err := _HashDictionary.contract.UnpackLog(event, "AddedEntry", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAddedEntry is a log parse operation binding the contract event 0x8c0baa86d44d5f30f109c29dc75cea40e1ab88d58b5181ff13c7992f4626af1e.
//
// Solidity: event AddedEntry(((bytes,bytes),int256,int256) arg0)
func (_HashDictionary *HashDictionaryFilterer) ParseAddedEntry(log types.Log) (*HashDictionaryAddedEntry, error) {
	event := new(HashDictionaryAddedEntry)
	if err := _HashDictionary.contract.UnpackLog(event, "AddedEntry", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
